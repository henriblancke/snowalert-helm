# Default values for snowalert.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

webui:
  image:
    repository: snowsec/snowalert-webui
    tag: 1.8.0-rc
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: snowalert.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  annotations: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  labels: {}

cron:
  image:
    repository: snowsec/snowalert
    tag: 1.8.0-rc
    pullPolicy: IfNotPresent
  
  apiVersion: v1beta1
  
  schedule: "5 * * * *"

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  annotations: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  labels: {}

## Recommended user priviliges for snowalert:
## CREATE USER snowalert PASSWORD = '**************'
## LOGIN_NAME = 'snowalert' DISPLAY_NAME = 'snowalert'
## FIRST_NAME = 'Snow' LAST_NAME = 'Alert'
## DEFAULT_ROLE = "ACCOUNTADMIN" MUST_CHANGE_PASSWORD = FALSE;
## GRANT ROLE "ACCOUNTADMIN" TO USER snowalert;
##
## Get values from `docker run -it snowsec/snowalert ./install`
##
snowflake:
  # snowflake_account: vpxxxx
  # sa_user: snowalert
  # sa_role: snowalert
  sa_database: snowalert
  sa_warehouse: snowalert
  # region: us-west-2 # optional
  # private_key_secret:
  #  name: snowflake
  #  key: private_key
  private_key_password_secret:
    name:
  #  key: private_key_password
  
jira:
  enabled: false
  url: "https://jira.atlassian.net"
  user: "snowalert"
  project: "SA"
  api_key_secret:
    name: jira
    key: api_key

slack:
  enabled: false
  api_token_secret:
    name: slack
    key: api_token

rbac:
  ## Specifies whether RBAC resources should be created
  create: true
  ## RBAC api version (v1, v1beta1, or v1alpha1)
  apiVersion: v1

serviceAccount:
  ## Specifies whether a ServiceAccount should be created
  create: true
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:
